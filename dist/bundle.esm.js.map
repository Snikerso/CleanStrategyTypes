{"version":3,"file":"bundle.esm.js","sources":["../src/index.ts"],"sourcesContent":["export interface IVote {\r\n  id: string;\r\n  roundId: string;\r\n  userId: string;\r\n  taskId: string;\r\n  count?: number;\r\n}\r\n\r\nexport type ITask = {\r\n  id: string;\r\n  title: string;\r\n  value: number;\r\n};\r\n\r\nexport type ISpace = {\r\n  id: string;\r\n  name: string;\r\n  roles: string[];\r\n};\r\n\r\nexport interface ICurrentUser {\r\n  id: string;\r\n  displayName: string;\r\n  email: string;\r\n  tenants: ISpace[];\r\n}\r\n\r\nexport interface IUser {\r\n  id: string;\r\n  displayName: string;\r\n  color: string;\r\n}\r\n\r\nexport interface IRound {\r\n  id: string;\r\n  order: number;\r\n  spaceId: string;\r\n  endDate: Date;\r\n  status?: \"finished\" | \"active\";\r\n}\r\n\r\nexport enum SpaceEventTypes {\r\n  CONNECT = \"CONNECT\",\r\n  DISCONNECT = \"DISCONNECT\",\r\n  VOTE = \"VOTE\",\r\n  DELETE_VOTE = \"DELETE_VOTE\",\r\n  RESET_VOTES = \"RESET_VOTES\",\r\n  START_ROUND = \"START_ROUND\",\r\n}\r\n\r\n// RequestMessage\r\n\r\nexport type VoteMessageBody = {\r\n  type: \"minus\" | \"plus\";\r\n  taskId: string;\r\n  currentUserId: string;\r\n};\r\n\r\nexport type VoteDeleteMessageBody = {\r\n  voteId: string;\r\n};\r\n\r\n// ResponseMessage\r\ntype ResponseMessageBase = {\r\n  errorMessages?: { type: string; message: string }[];\r\n};\r\n\r\nexport type VoteMessageResponse = ResponseMessageBase & {\r\n  vote: IVote;\r\n};\r\nexport type VoteDeleteMessageResponse = ResponseMessageBase & {\r\n  voteId: string;\r\n};\r\n\r\nexport type StartRoundResponseMessage = ResponseMessageBase & {\r\n  round: IRound;\r\n};\r\n\r\nexport type ConnectMessageResponse = ResponseMessageBase & {\r\n  votes: IVote[];\r\n  tasks: ITask[];\r\n  users: IUser[];\r\n  currentPeriod: IRound;\r\n};\r\n\r\nexport type ResetVotesMessageResponse = ResponseMessageBase & {\r\n  votes: IVote[];\r\n};\r\n\r\nexport type StartRoundMessageResponse = ResponseMessageBase & {\r\n  round?: IRound;\r\n};\r\n\r\nexport interface GameServerToClientEvents {\r\n  [SpaceEventTypes.CONNECT]: (message: ConnectMessageResponse) => void;\r\n  [SpaceEventTypes.DISCONNECT]: (message: any) => void;\r\n  [SpaceEventTypes.START_ROUND]: (message: StartRoundMessageResponse) => void;\r\n  [SpaceEventTypes.VOTE]: (message: VoteMessageResponse) => void;\r\n  [SpaceEventTypes.DELETE_VOTE]: (message: VoteDeleteMessageResponse) => void;\r\n  [SpaceEventTypes.RESET_VOTES]: (message: ResetVotesMessageResponse) => void;\r\n}\r\n\r\nexport interface GameClientToServerEvents {\r\n  [SpaceEventTypes.CONNECT]: (message: any) => void;\r\n  [SpaceEventTypes.START_ROUND]: (message: any) => void;\r\n  [SpaceEventTypes.VOTE]: (message: VoteMessageBody) => void;\r\n  [SpaceEventTypes.DELETE_VOTE]: (message: VoteDeleteMessageBody) => void;\r\n  [SpaceEventTypes.RESET_VOTES]: (message: any) => void;\r\n}\r\n"],"names":[],"mappings":"IAyCY,gBAOX;AAPD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,eAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC7B,CAAC,EAPW,eAAe,KAAf,eAAe,GAO1B,EAAA,CAAA,CAAA;;;;"}